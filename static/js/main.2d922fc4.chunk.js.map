{"version":3,"sources":["components/lt/Generator.js","components/lv/Generator.js","components/ee/Generator.js","components/fi/Generator.js","components/Generator.js","components/IdGeneratorComponent.js","App.js","serviceWorker.js","index.js"],"names":["generate","date","gender","genderNumber","gen","Math","floor","year","getGenderNumber","Moment","datePart","format","sequenceNumber","rand","random","i","toString","length","getSequenceNumber","codeWithoutCheckNumber","checkNumber","code","digit","b","c","d","e","parseInt","getCheckSum","withoutCheckSum","result","value","start","end","filter","option","getCentury","checkDigit","factor","split","map","reduce","prev","cur","getCheckDigit","substring","sumNumber","forEach","number","index","wholePart","residue","secondLevelBias","centurySign","charAt","round","country","generateEE","generateLV","generateLT","generateFI","Date","getTime","randomEE","randomLV","randomLT","randomFI","countryConfigurations","id","name","showGender","IdGeneratorComponent","props","randomize","generatedCodes","state","setState","codes","onChange","field","onGenerate","subtract","toDate","this","countryConfiguration","countryConf","className","Row","Col","md","href","target","src","alt","Form","Check","checked","type","label","Button","variant","size","onClick","key","text","Component","App","Container","fluid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2d922fc4.chunk.js","sourcesContent":["import Moment from 'moment';\n\nexport function random() {\n    const start = new Date(1945, 0, 1);\n    const end = new Date();\n    const randomDate = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n    const randomGender = [1,2][Math.floor(Math.random() * [1,2].length)];\n    return generate(randomDate, randomGender);\n}\n\nexport function generate(date, gender) {\n    date = Moment(date);\n\n    const genderNumber = getGenderNumber(date, gender);\n    const datePart = date.format(\"YYMMDD\");\n    const sequenceNumber = getSequenceNumber();\n    let codeWithoutCheckNumber = `${genderNumber}${datePart}${sequenceNumber}`;\n\n    const checkNumber = getCheckSum(codeWithoutCheckNumber);\n\n    return {\n        gender: gender,\n        date: date,\n        code: `${codeWithoutCheckNumber}${checkNumber}`\n    }\n}\n\nfunction getGenderNumber(date, gender) {\n    const gen = gender === 0 ? 1 : 0;\n    return Math.floor(date.year() / 100) * 2 - 34 - gen;\n}\n\nfunction getSequenceNumber() {\n    const min = 0;\n    const max = 999;\n    let rand = Math.floor(Math.random() * max) + min;\n\n    for (let i = 0; i < (3 - rand.toString().length); i++) {\n        rand = `0${rand}`;\n    }\n\n    return rand;\n}\n\nfunction getCheckSum(code) {\n    let b = 1, c = 3, d = 0, e = 0, i, digit;\n    for (i = 0; i < 10; i++) {\n        digit = parseInt(code[i]);\n        d += digit * b;\n        e += digit * c;\n        b++; if (b === 10) b = 1;\n        c++; if (c === 10) c = 1;\n    }\n    d = d % 11;\n    e = e % 11;\n    if (d < 10)\n        return d;\n    else if (e < 10)\n        return e;\n    else\n        return 0;\n}","import Moment from 'moment';\n\nexport function random() {\n    const start = new Date(1945, 0, 1);\n    const end = new Date();\n    const randomDate = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n    const randomGender = [1,2][Math.floor(Math.random() * [1,2].length)];\n    return generate(randomDate, randomGender);\n}\n\nexport function generate(date, gender) {\n    date = Moment(date);\n    const withoutCheckSum =  `${date.format(\"DDMMYY\")}${getCentury(date)}${getSequenceNumber()}`;\n    const checkDigit = getCheckDigit(withoutCheckSum)\n    const code = `${withoutCheckSum}${checkDigit}`;\n\n    return {\n        gender: null,\n        date: date,\n        code: code.substring(0, 6) + \"-\" + code.substring(6)\n    }\n}\n\n// (0 for 19. (1800-1899), 1 for 20. (1900-1999) and 2 for 21. (2000-2099)\nfunction getCentury(date) {\n    const year = date.year();\n    const options = [\n        {value: 0, start: 1800, end: 1899},\n        {value: 1, start: 1900, end: 1999},\n        {value: 2, start: 2000, end: 2099}\n    ];\n    const result = options.filter(option => year >= option.start && year <= option.end);\n    return result && result.length > 0 ? result[0].value : null;\n}\n\nfunction getSequenceNumber() {\n    const min = 0;\n    const max = 999;\n    let rand = Math.floor(Math.random() * max) + min;\n\n    for (let i = 0; i < (3 - rand.toString().length); i++) {\n        rand = `0${rand}`;\n    }\n\n    return rand;\n}\n\nfunction getCheckDigit(code) {\n    let factor = [1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n    code = code.split(\"\").map(i => parseInt(i));\n\n    let reduce = code.reduce((prev, cur, i) => cur * factor[i] + prev);\n\n    return (1101 - reduce) % 11 % 10;\n}","import Moment from 'moment';\n\nexport function random() {\n    const start = new Date(1945, 0, 1);\n    const end = new Date();\n    const randomDate = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n    const randomGender = [1,2][Math.floor(Math.random() * [1,2].length)];\n\n    return generate(randomDate, randomGender)\n}\n\nexport function generate(date, gender) {\n    date = Moment(date);\n    const genderNumber = getGenderNumber(date, gender);\n    const datePart = date.format(\"YYMMDD\");\n    const sequenceNumber = getSequenceNumber();\n    let codeWithoutCheckNumber = `${genderNumber}${datePart}${sequenceNumber}`;\n\n    const checkNumber = getCheckSum(codeWithoutCheckNumber);\n\n    return {\n        gender: gender,\n        date: date,\n        code: `${codeWithoutCheckNumber}${checkNumber}`\n    }\n}\n\n// 1:\t1800...1899.a\tsündinud\tmees\n// 2:\t1800...1899.a\tsündinud\tnaine\n// 3:\t1900...1999.a\tsündinud\tmees\n// 4:\t1900...1999.a\tsündinud\tnaine\n// 5:\t2000...2099.a\tsündinud\tmees\n// 6:\t2000...2099.a\tsündinud\tnaine\nfunction getGenderNumber(date, gender) {\n    const year = date.year();\n    const options = [\n        {value: 1, start: 1800, end: 1899, gender: 1},\n        {value: 2, start: 1800, end: 1899, gender: 2},\n        {value: 3, start: 1900, end: 1999, gender: 1},\n        {value: 4, start: 1900, end: 1999, gender: 2},\n        {value: 5, start: 2000, end: 2099, gender: 1},\n        {value: 6, start: 2000, end: 2099, gender: 2}\n    ];\n\n    const result = options.filter(option => option.gender === gender && year >= option.start && year <= option.end);\n    return result && result.length > 0 ? result[0].value : null;\n}\n\nfunction getSequenceNumber() {\n    const min = 0;\n    const max = 999;\n    let rand = Math.floor(Math.random() * max) + min;\n\n    for (let i = 0; i < (3 - rand.toString().length); i++) {\n        rand = `0${rand}`;\n    }\n\n    return rand;\n}\n\nfunction getCheckSum(code) {\n    let sumNumber = 0;\n\n    code.split(\"\").forEach((number, index) => {\n        const weight = index === 9 ? 1 : index + 1;\n        sumNumber = sumNumber + (number * weight);\n    });\n\n    let wholePart = Math.floor(sumNumber / 11);\n    let residue = sumNumber - (wholePart * 11);\n    if(residue !== 10) {\n        return residue;\n    }\n\n    sumNumber = 0;\n    const secondLevelBias = [3,4,5,6,7,8,9,1,2,3]\n    code.split(\"\").forEach((number, index) => {\n        sumNumber = sumNumber + (number * secondLevelBias[index]);\n    });\n\n    wholePart = Math.floor(sumNumber / 11);\n    residue = sumNumber - (wholePart * 11);\n    return residue === 10 ? 0 : residue;\n}","import Moment from 'moment';\n\nexport function random() {\n    const start = new Date(1945, 0, 1);\n    const end = new Date();\n    const randomDate = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n    const randomGender = [1,2][Math.floor(Math.random() * [1,2].length)];\n    return generate(randomDate, randomGender);\n}\n\nexport function generate(date, gender) {\n    date = Moment(date);\n    const sequenceNumber = getSequenceNumber(gender);\n    const datePart = date.format(\"DDMMYY\");\n    const centurySign = getCentury(date);\n\n    return {\n        gender: gender,\n        date: date,\n        code: `${datePart}${centurySign}${sequenceNumber}${getCheckSum(parseInt(`${datePart}${sequenceNumber}`))}`\n    }\n}\n\nfunction getCentury(date) {\n    const year = date.year();\n    const options = [\n        {value: '+', start: 1800, end: 1899},\n        {value: '-', start: 1900, end: 1999},\n        {value: 'A', start: 2000, end: 2099}\n    ];\n    const result = options.filter(option => year >= option.start && year <= option.end);\n    return result && result.length > 0 ? result[0].value : null;\n}\n\n\n\nfunction getSequenceNumber(gender) {\n    const min = 2;\n    const max = 899;\n    let rand = Math.floor(Math.random() * max) + min;\n\n    if((gender === 1 && rand % 2  === 0) || (gender === 2 && rand % 2 !== 0)) {\n        return getSequenceNumber(gender);\n    }\n\n    for (let i = 0; i < (3 - rand.toString().length); i++) {\n        rand = `0${rand}`;\n    }\n\n    return rand;\n}\n\nfunction getCheckSum(code) {\n    const checkNumberString = \"0123456789ABCDEFHJKLMNPRSTUVWXY\";\n    return checkNumberString.charAt(Math.round(((code / 31) % 1) * 31));\n}","import {generate as generateLT, random as randomLT} from \"./lt/Generator\";\nimport {generate as generateLV, random as randomLV} from \"./lv/Generator\";\nimport {generate as generateEE, random as randomEE} from \"./ee/Generator\";\nimport {generate as generateFI, random as randomFI} from \"./fi/Generator\";\n\nexport function generate(country, date, gender) {\n    switch (country) {\n        case 1:\n            return generateEE(date, gender);\n        case 2:\n            return generateLV(date, gender);\n        case 3:\n            return generateLT(date, gender);\n        case 4:\n            return generateFI(date, gender);\n    }\n}\n\nexport function random(country) {\n    switch (country) {\n        case 1:\n            return randomEE();\n        case 2:\n            return randomLV();\n        case 3:\n            return randomLT();\n        case 4:\n            return randomFI();\n    }\n}","import React, {Component} from 'react';\nimport DatePicker from 'react-date-picker';\nimport {Form, Button, Row, Col} from \"react-bootstrap\";\nimport Moment from 'moment'\nimport {generate, random} from \"./Generator\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {MdContentCopy} from 'react-icons/md';\n\nconst countryConfigurations = [\n    {\n        id: 1,\n        name: 'Estonia',\n        showGender: true\n    },\n    {\n        id: 2,\n        name: 'Latvia',\n        showGender: false\n    },\n    {\n        id: 3,\n        name: 'Lithuania',\n        showGender: true\n    }, {\n        id: 4,\n        name: \"Finland\",\n        showGender: true\n    }\n];\n\n\nclass IdGeneratorComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: Moment().subtract(\"24\", \"year\").toDate(),\n            gender: 1,\n            codes: [],\n            country: 1\n        }\n    }\n\n    componentDidMount() {\n        this.randomize();\n    }\n\n    randomize = () => {\n        let generatedCodes = [];\n        for(let i = 0; i <= 10; i++) {\n            generatedCodes = [...generatedCodes, random(this.state.country)];\n        }\n        this.setState({codes: generatedCodes});\n    }\n\n    onChange = (field, value) => {\n        this.setState({[field]: value });\n    }\n\n    onGenerate = () => {\n        this.setState({codes: [generate(this.state.country, this.state.date, this.state.gender)]});\n    }\n\n    render() {\n        const countryConfiguration = countryConfigurations.filter(countryConf => countryConf.id === this.state.country)[0]\n\n        return (\n            <div className=\"country-generator\">\n                <Row className=\"row d-flex align-items-center header-wrapper\">\n                    <Col className=\"title\" md={8}> Identification number generator</Col>\n                    <Col md={3}>\n                        <a href=\"https://www.buymeacoffee.com/kristo\" target=\"_blank\">\n                            <img src=\"https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png\" alt=\"Buy Me A Coffee\" className=\"btn-coffee\" />\n                        </a>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={3}>\n                        <div className=\"attribute-name\">Country</div>\n                        {countryConfigurations.map(countryConf =>\n                            <Form.Check\n                                checked={this.state.country === countryConf.id}\n                                onChange={(e) => this.onChange(\"country\", countryConf.id)}\n                                name=\"country\"\n                                type=\"radio\"\n                                label={countryConf.name}\n                                id={`country-${countryConf.id}`}\n                            />\n                        )}\n                        <Row>\n                            <Col className=\"d-flex justify-content-start\"><Button className=\"btn-random light\" variant=\"primary\" size=\"md\" onClick={this.randomize}>Random</Button></Col>\n                        </Row>\n                    </Col>\n                    <Col md={1}>\n                        <hr/>\n                    </Col>\n                    <Col md={8}>\n                        <Row>\n                            <Col>\n                                <div className=\"attribute-name\">Birthday</div>\n                                <DatePicker\n                                    format={\"y-MM-dd\"}\n                                    onChange={(e) => this.onChange(\"date\", e ? Moment(e).toDate() : null)}\n                                    value={this.state.date}\n                                />\n                            </Col>\n                            {countryConfiguration.showGender && <Col>\n                                <div className=\"attribute-name\">Gender</div>\n                                <Form.Check\n                                    checked={this.state.gender === 1}\n                                    onChange={(e) => this.onChange(\"gender\", 1)}\n                                    name=\"gender\"\n                                    type=\"radio\"\n                                    label=\"male\"\n                                    id=\"est-gender-man\"\n                                />\n                                <Form.Check\n                                    checked={this.state.gender === 2}\n                                    onChange={(e) => this.onChange(\"gender\", 2)}\n                                    name=\"gender\"\n                                    type=\"radio\"\n                                    label=\"female\"\n                                    id=\"est-gender-woman\"\n                                />\n                            </Col>\n                            }\n                        </Row>\n                        <Row>\n                            <Col className=\"d-flex justify-content-start\"><Button className=\"btn-random\" variant=\"primary\" size=\"md\" onClick={this.onGenerate}>GENERATE SPECIFIC</Button></Col>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <div className=\"result-list\">\n                            {this.state.codes.map(code =>\n\n                                <Row key={code} className=\"generated\">\n                                    <Col md={6}>{code.code} </Col>\n                                    {code.gender && <Col md={2}>\n                                        <span className=\"badge\">{code.gender === 1 ? 'MALE' : 'FEMALE'}</span>\n                                    </Col>\n                                    }\n                                    <Col md={2}>\n                                        <span className=\"badge badge-dark\">{code.date.format('YYYY-MM-DD')}</span>\n                                    </Col>\n                                    <Col md={2} className=\"d-flex justify-content-end align-items-center\"><CopyToClipboard text={code.code}><MdContentCopy/></CopyToClipboard></Col>\n                                </Row>\n                            )}\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default IdGeneratorComponent;","import React from 'react';\nimport {Container,Row,Col} from \"react-bootstrap\";\nimport IdGeneratorComponent from \"./components/IdGeneratorComponent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Container fluid>\n            <Row className=\"d-flex justify-content-center\">\n                <Col md={6}><IdGeneratorComponent/></Col>\n            </Row>\n        </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}